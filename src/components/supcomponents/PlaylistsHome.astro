---
import { Image } from "astro:assets";
import { type Item } from "../../types/playlists.type"
import CoverPlaylistDefaultLarge from "@icons/CoverPlaylistDefaultLarge.astro";
import PlayLarge from "@icons/PlayLargeIcon.astro";

interface Props {
  items: Item[]
}

  const { items } = Astro.props
---

<Fragment>
  {
    items.map((playlist) => (
      <a href={`playlist/${playlist.id}`} class="container__playlist">
        {playlist.images[0]?.url !== undefined ? (
          <picture class="content__img">
            <Image
              src={playlist.images[0]?.url}
              height="169"
              width="169"
              class="img__playlist"
              alt={`Cover de portada del playlist ${playlist.name}`}
              transition:name={`playlist ${playlist.id} image`}
            />
            <div class="button__play">
              <PlayLarge />
            </div>
          </picture>
        ) : (
          <picture class="content__svg" transition:name={`playlist ${playlist.id} default`}>
            <CoverPlaylistDefaultLarge />
            <div class="button__play pos__bottonplay">
              <PlayLarge />
            </div>
          </picture>
        )}
        <div class="container__info">
          <h3 class="playlist__name parraf__hidden" >
            {playlist.name}
          </h3>
          <p class="playlist__tracks parraf__hidden--clamp2">
            {playlist.owner.display_name}
          </p>
        </div>
      </a>
    ))
  }
</Fragment>

<style>
    .container__playlist {
    display: flex;
    align-items: center;
    flex-direction: column;
    background: #181818;
    border-radius: 8px;
    height: 100%;
    width: 100%;
    transition: background-color 0.3s ease;
  }

  .container__playlist:hover {
    background-color: hsla(0, 0%, 100%, 0.1);
    .button__play {
      display: flex;
    }
  }

  .content__img {
    padding: 1rem 0;
    position: relative;
  }

  .img__playlist {
    border-radius: 6px;
    display: block;
    position: relative;
    user-select: none;
    -webkit-user-select: none;
  }

  .button__play {
    display: none;
    align-items: center;
    justify-content: center;
    background-color: #1db954;
    width: 48px;
    height: 48px;
    border-radius: 50%;
    margin-right: 0.5rem;
    color: #000;
    box-shadow: 0px 9px 9px -1px rgba(0, 0, 0, 0.42);
    -webkit-box-shadow: 0px 9px 9px -1px rgba(0, 0, 0, 0.42);
    -moz-box-shadow: 0px 9px 9px -1px rgba(0, 0, 0, 0.42);
    position: absolute;
    bottom: 25px;
    right: 0;
  }

  .button__play:hover {
    transform: scale(1.06);
    background-color: #1db944;
  }

  .pos__bottonplay {
    bottom: 10px;
    right: 0;
  }

  .container__info {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding: 0 1rem 1rem 1rem;
    width: 100%;
  }

  .playlist__name {
    font-size: 1em;
    font-weight: 700;
    color: #fff;
    padding-block-end: 4px;
    user-select: none;
    -webkit-user-select: none;
  }

  .parraf__hidden {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    width: 100%;
  }

  .parraf__hidden--clamp2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .playlist__tracks {
    font-size: 0.875rem;
    color: #a7a7a7;
    font-weight: 400;
    user-select: none;
    -webkit-user-select: none;
  }

  .content__svg {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 1rem 0;
    background-color: #28253f;
    color: #b3b3b3;
    border-radius: 6px;
    width: 10.5625rem;
    height: 10.5625rem;
    position: relative;
  }
</style>
